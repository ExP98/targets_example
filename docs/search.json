[
  {
    "objectID": "targets_tutorial.html#проблема-1",
    "href": "targets_tutorial.html#проблема-1",
    "title": "Пакет targets",
    "section": "Проблема №1",
    "text": "Проблема №1\n\nНовый проект с огромной кодовой базой: десятки файлов, тысячи строк кода\nПоменять один параметр, “достать” часть данных\nКак это запускать? Как понять зависимости между файлами/функциями?"
  },
  {
    "objectID": "targets_tutorial.html#проблема-2",
    "href": "targets_tutorial.html#проблема-2",
    "title": "Пакет targets",
    "section": "Проблема №2",
    "text": "Проблема №2\n\nРазобрались со связями: есть несколько моделей, которые зависят от разных наборов данных\nПоменялся один из наборов данных или изменились параметры модели – пересобирать весь проект заново?\n\n\n\nСпустя часы выполнения возникла ошибка в маленьком малозначимом кусочке кода?\n\n\n\nОшибка? Спустя несколько часов выполнения?"
  },
  {
    "objectID": "targets_tutorial.html#проблема-3",
    "href": "targets_tutorial.html#проблема-3",
    "title": "Пакет targets",
    "section": "Проблема №3",
    "text": "Проблема №3\n\nНашли, какую модель надо перезапустить, а какую не надо\nКак сохранить результаты моделей так, чтобы они не менялись, когда не меняется вход?\nКак посмотреть вход или выход тех или иных функций?"
  },
  {
    "objectID": "targets_tutorial.html#решение-проблем",
    "href": "targets_tutorial.html#решение-проблем",
    "title": "Пакет targets",
    "section": "Решение проблем",
    "text": "Решение проблем\nT A R G E T S\n\nTargets – и ваша жизнь не будет прежней"
  },
  {
    "objectID": "targets_tutorial.html#материалы",
    "href": "targets_tutorial.html#материалы",
    "title": "Пакет targets",
    "section": "Материалы",
    "text": "Материалы\n\nThe {targets} R package user manual – материалы отсюда\nTargets package on Github\nGet started with {targets} in 4 minutes"
  },
  {
    "objectID": "targets_tutorial.html#особенности",
    "href": "targets_tutorial.html#особенности",
    "title": "Пакет targets",
    "section": "Особенности",
    "text": "Особенности\n\nПринцип схож с makefile\nВ основе лежит функционально-ориентированный стиль (как и во всем R)\nВесь код представлен как последовательность узлов (aka таргетов), сходных с функциями, у которых есть вход и выход. Таргеты зависят друг от друга\nКлючевой файл – _targets.R. В нем содержится список всех таргетов. Всегда должен находиться в корне папки"
  },
  {
    "objectID": "targets_tutorial.html#типичная-структура-проекта",
    "href": "targets_tutorial.html#типичная-структура-проекта",
    "title": "Пакет targets",
    "section": "Типичная структура проекта",
    "text": "Типичная структура проекта\n├── _targets.R\n├── 01.Data/data.csv\n├── 02.R/\n│   ├── 01.functions.R\n│   ├── 02.…\n├── 03.Targets/\n│   ├── 01.tar1.R\n│   ├── 02.…"
  },
  {
    "objectID": "targets_tutorial.html#с-чего-начинать-12",
    "href": "targets_tutorial.html#с-чего-начинать-12",
    "title": "Пакет targets",
    "section": "С чего начинать? [1/2]",
    "text": "С чего начинать? [1/2]\n\nНаписать код как некоторую последовательность функций в R (pipeline), сохранить в папку с кодом /02.R/\nВызвать use_targets() для создания ключевого файла _targets.R\nЗаполнить _targets.R нужными таргетами, не забыв загрузить библиотеки, глобальные переменные и функции"
  },
  {
    "objectID": "targets_tutorial.html#с-чего-начинать-22",
    "href": "targets_tutorial.html#с-чего-начинать-22",
    "title": "Пакет targets",
    "section": "С чего начинать? [2/2]",
    "text": "С чего начинать? [2/2]\n\nПри первом запуске для создания метаданных использовать tar_make(). В дальнейшем для просмотра графа связей tar_visnetwork()1\nРезультат выполнения в папке /_targets/. Просмотр посчитанных таргетов: tar_read(01.My_first_target)\n\nИли лучше tar_visnetwork(targets_only = TRUE)"
  },
  {
    "objectID": "targets_tutorial.html#файл-_targets.r-12",
    "href": "targets_tutorial.html#файл-_targets.r-12",
    "title": "Пакет targets",
    "section": "Файл _targets.R [1/2]",
    "text": "Файл _targets.R [1/2]\nКлассический _targets.R содержит:\n\nзагружаемые пакеты\ntar_option_set()\nsource(\"01.R/functions.R\")\nсписок таргетов: list(tar_target(…), tar_target(…), …)"
  },
  {
    "objectID": "targets_tutorial.html#файл-_targets.r-22",
    "href": "targets_tutorial.html#файл-_targets.r-22",
    "title": "Пакет targets",
    "section": "Файл _targets.R [2/2]",
    "text": "Файл _targets.R [2/2]\n\nsource(\"01.Targets/01.Libraries.R\")\nsource(\"01.Targets/02.Functions.R\")\nsource(\"01.Targets/03.List_of_targets.R\")\n\n\ntar_option_set(format = \"qs\")\ntar_config_set(script = \"_targets.R\", store = \"_targets\")\n\n\nlist(\n  data_targets,\n  ANOVA_targets,\n  PCA_targets\n)"
  },
  {
    "objectID": "targets_tutorial.html#файл-03.list_of_targets.r-12",
    "href": "targets_tutorial.html#файл-03.list_of_targets.r-12",
    "title": "Пакет targets",
    "section": "Файл 03.List_of_targets.R [1/2]",
    "text": "Файл 03.List_of_targets.R [1/2]\n\nPCA_targets &lt;- list(\n  tar_target(DT.03.1.PCA_model,\n             calculate_PCA_model(DT.01.1.Get_data, scale = TRUE)),\n\n  tar_target(DT.03.2.PCA_summary,\n             pca_summary(DT.03.1.PCA_model)),\n\n  tar_target(DT.03.3.PCA_loadings,\n             pca_loadings(DT.03.1.PCA_model)),\n\n  tar_target(DT.03.4.PCA_plot,\n             plot_to_pdf(DT.03.1.PCA_model, \"PCA_components\")),\n\n  tar_target(DT.03.5.PCA_less_dim,\n             pca_plot_lesser_dim(DT.01.1.Get_data, \"Species\"))\n)"
  },
  {
    "objectID": "targets_tutorial.html#файл-03.list_of_targets.r-22",
    "href": "targets_tutorial.html#файл-03.list_of_targets.r-22",
    "title": "Пакет targets",
    "section": "Файл 03.List_of_targets.R [2/2]",
    "text": "Файл 03.List_of_targets.R [2/2]\n\ndata_targets &lt;- list(\n  tar_target(DT.01.1.Get_data,\n             get_data(data = iris, slice_n = NULL)),\n\n  tar_target(DT.01.2.Plot_pairs,\n             plot_pairs(DT.01.1.Get_data))\n)\n\n\nANOVA_targets &lt;- list(\n  tar_target(DT.02.1.ANOVA_model,\n             calculate_anova_model(DT.01.1.Get_data))\n)"
  },
  {
    "objectID": "targets_tutorial.html#файл-02.functions.r-12",
    "href": "targets_tutorial.html#файл-02.functions.r-12",
    "title": "Пакет targets",
    "section": "Файл 02.Functions.R [1/2]",
    "text": "Файл 02.Functions.R [1/2]\n\n# 1. Getting data           ####\nget_data &lt;- function(data = iris, slice_n = NULL) {\n  if (!is.null(slice_n)) {\n    return(data[slice_n,])\n  } else {\n    return(data)\n  }\n}\n\n\n# 2. Models                 ####\n# 2.1 ANOVA model           ####\ncalculate_anova_model &lt;- function(data_ = iris) {\n  r &lt;- aov(lm(data_[, 1] ~ ., data = data_[-1]))\n  return(summary(r))\n}\n\n\n# 2.2 PCA model             ####\ncalculate_PCA_model &lt;- function(data_, scale = TRUE) {\n  pca_data &lt;- data_ %&gt;%\n    as.data.table() %&gt;%\n    copy()\n  pca_data &lt;- if (scale) {\n    pca_data[, scale(.SD), .SDcols = is.numeric]\n  } else {\n    pca_data[, .SD, .SDcols = is.numeric]\n  }\n  return(pca_data %&gt;% princomp())\n}"
  },
  {
    "objectID": "targets_tutorial.html#файл-02.functions.r-12-1",
    "href": "targets_tutorial.html#файл-02.functions.r-12-1",
    "title": "Пакет targets",
    "section": "Файл 02.Functions.R [1/2]",
    "text": "Файл 02.Functions.R [1/2]\n\npca_summary &lt;- \\(pca_res) pca_res %&gt;% summary()\npca_loadings &lt;- \\(pca_res) pca_res %&gt;% loadings()\n\nplot_to_pdf &lt;- function(pca_res, file_name = \"my_plot\") {\n  pdf(paste0(\"02.Outputs/\", file_name, \".pdf\"))\n  pca_res %&gt;% plot()\n  dev.off()\n  return(invisible(NULL))\n}\n\n\n# 2.3 Another PCA model      ####\npca_plot_lesser_dim &lt;- function(data_, factor_var, file_name = \"PCA_less_dim\") {\n  pca_res &lt;- data_ %&gt;%\n    as.data.table() %&gt;%\n    copy() %&gt;%\n    .[, scale(.SD), .SDcols = is.numeric] %&gt;%\n    ade4::dudi.pca(scannf=FALSE)\n\n  pdf(paste0(\"02.Outputs/\", file_name, \".pdf\"))\n  ade4::s.class(pca_res$li, data_[, factor_var])\n  dev.off()\n\n  return(invisible(NULL))\n}\n\n\n# 2.4 Another plot functions        ####\nplot_pairs &lt;- \\(data_, file_name = \"pairs_plot\") {\n  pdf(paste0(\"02.Outputs/\", file_name, \".pdf\"))\n  data_ %&gt;% pairs()\n  dev.off()\n  return(invisible(NULL))\n}"
  },
  {
    "objectID": "targets_tutorial.html#команды-tar_manifest",
    "href": "targets_tutorial.html#команды-tar_manifest",
    "title": "Пакет targets",
    "section": "Команды: tar_manifest",
    "text": "Команды: tar_manifest\n\ntar_manifest()\n\ntar_manifest(fields = all_of(\"command\"))\n\n# A tibble: 8 × 2\n  name                 command                                              \n  &lt;chr&gt;                &lt;chr&gt;                                                \n1 DT.01.1.Get_data     \"get_data(data = iris, slice_n = NULL)\"              \n2 DT.03.5.PCA_less_dim \"pca_plot_lesser_dim(DT.01.1.Get_data, \\\"Species\\\")\" \n3 DT.03.1.PCA_model    \"calculate_PCA_model(DT.01.1.Get_data, scale = TRUE)\"\n4 DT.01.2.Plot_pairs   \"plot_pairs(DT.01.1.Get_data)\"                       \n5 DT.02.1.ANOVA_model  \"calculate_anova_model(DT.01.1.Get_data)\"            \n6 DT.03.2.PCA_summary  \"pca_summary(DT.03.1.PCA_model)\"                     \n7 DT.03.3.PCA_loadings \"pca_loadings(DT.03.1.PCA_model)\"                    \n8 DT.03.4.PCA_plot     \"plot_to_pdf(DT.03.1.PCA_model, \\\"PCA_components\\\")\""
  },
  {
    "objectID": "targets_tutorial.html#команды-tar_visnetwork",
    "href": "targets_tutorial.html#команды-tar_visnetwork",
    "title": "Пакет targets",
    "section": "Команды: tar_visnetwork",
    "text": "Команды: tar_visnetwork\n\ntar_visnetwork(targets_only = TRUE)"
  },
  {
    "objectID": "targets_tutorial.html#команды-tar_visnetwork-1",
    "href": "targets_tutorial.html#команды-tar_visnetwork-1",
    "title": "Пакет targets",
    "section": "Команды: tar_visnetwork",
    "text": "Команды: tar_visnetwork\n\ntar_visnetwork(targets_only = TRUE) после изменения параметров одного из узлов"
  },
  {
    "objectID": "targets_tutorial.html#команды-tar_make-tar_read",
    "href": "targets_tutorial.html#команды-tar_make-tar_read",
    "title": "Пакет targets",
    "section": "Команды: tar_make, tar_read",
    "text": "Команды: tar_make, tar_read\n\ntar_make()\n✔ skipped target DT.01.1.Get_data\n✔ skipped target DT.03.5.PCA_less_dim \n✔ skipped target DT.03.1.PCA_model \n✔ skipped target DT.01.2.Plot_pairs \n✔ skipped target DT.02.1.ANOVA_model\n✔ skipped target DT.03.2.PCA_summary\n✔ skipped target DT.03.3.PCA_loadings\n✔ skipped target DT.03.4.PCA_plot\n✔ skipped pipeline [0.188 seconds]\ntar_read(DT.01.1.Get_data)\n    Sepal.Length Sepal.Width Petal.Length Petal.Width    Species \n    1            5.1         3.5          1.4         0.2     setosa\n    2            4.9         3.0          1.4         0.2     setosa\n    3            4.7         3.2          1.3         0.2     setosa\n    4            4.6         3.1          1.5         0.2     setosa"
  },
  {
    "objectID": "targets_tutorial.html#полезные-команды-tar_cue",
    "href": "targets_tutorial.html#полезные-команды-tar_cue",
    "title": "Пакет targets",
    "section": "Полезные команды: tar_cue",
    "text": "Полезные команды: tar_cue\n\ntar_cue()\n\ntar_target(DT.01.Download_target, download_data(), cue = tar_cue(mode = \"always\"))\n\n\ntar_cue(\n  mode = c(\"thorough\", \"always\", \"never\"),\n  command = TRUE,\n  depend = TRUE,\n  format = TRUE,\n  repository = TRUE,\n  iteration = TRUE,\n  file = TRUE,\n  seed = TRUE\n)\n\nCue mode. If \"thorough\", all the cues apply unless individually suppressed. If \"always\", then the target always runs. If \"never\", then the target does not run unless the metadata does not exist or the last run errored."
  },
  {
    "objectID": "targets_tutorial.html#отслеживание-изменений-12",
    "href": "targets_tutorial.html#отслеживание-изменений-12",
    "title": "Пакет targets",
    "section": "Отслеживание изменений [1/2]",
    "text": "Отслеживание изменений [1/2]\n\nДля отслеживания изменений targets считает hash: так, изменение тела функции, аргументов, зависимостей влечет и изменение хэша\nОбъект должен быть совместим с форматом хранения, выбранным с помощью аргумента format функций tar_target() или tar_option_set()"
  },
  {
    "objectID": "targets_tutorial.html#отслеживание-изменений-22",
    "href": "targets_tutorial.html#отслеживание-изменений-22",
    "title": "Пакет targets",
    "section": "Отслеживание изменений [2/2]",
    "text": "Отслеживание изменений [2/2]\n\nНе все изменения отслеживаются -&gt; Non-Exportable Objects:\n\nbase::connection, DBIconnection\ncpp, Rcpp, rJava, reticulate, keras, polars, xgboost\nparallel, arrow tables, sparklyr\nXML\n\nДля таких объектов или существуют обходные пути, или стоит просто принять: изменение этих объектов не всегда влечет автоматическое обнаружение этих изменений пакетом targets"
  },
  {
    "objectID": "targets_tutorial.html#каким-должен-быть-tar_target-12",
    "href": "targets_tutorial.html#каким-должен-быть-tar_target-12",
    "title": "Пакет targets",
    "section": "Каким должен быть tar_target? [1/2]",
    "text": "Каким должен быть tar_target? [1/2]\nХороший target обычно:\n\nДостаточно крупный, чтобы при пропуске (skipped) значительно сократить время выполнения\nДостаточно мал, чтобы некоторые таргеты можно было пропустить, даже если другие необходимо перевыполнить"
  },
  {
    "objectID": "targets_tutorial.html#каким-должен-быть-tar_target-22",
    "href": "targets_tutorial.html#каким-должен-быть-tar_target-22",
    "title": "Пакет targets",
    "section": "Каким должен быть tar_target? [2/2]",
    "text": "Каким должен быть tar_target? [2/2]\n\nНе вызывает побочных эффектов, таких как изменения глобальной среды (не касается, например, target с tar_target(format = \"file\"))\nВозвращает единственное значение, которое:\n\nЛегко понять и проанализировать\nЗначимое для проекта\nЛегко сохранить как файл, например, с помощью qsave(). Следует избегать неэкспортируемых объектов (см. предыдущий слайд)"
  },
  {
    "objectID": "targets_tutorial.html#динамическое-и-статическое-ветвление",
    "href": "targets_tutorial.html#динамическое-и-статическое-ветвление",
    "title": "Пакет targets",
    "section": "Динамическое и статическое ветвление",
    "text": "Динамическое и статическое ветвление\n\n\n\n\n\n\n\nDynamic\nStatic\n\n\n\n\nPipeline creates new targets at runtime\nAll targets defined in advance\n\n\nCryptic target names\nFriendly target names\n\n\nScales to hundreds of branches\nDoes not scale as easily for tar_visnetwork() etc\n\n\nNo metaprogramming required\nFamiliarity with metaprogramming is helpful"
  },
  {
    "objectID": "targets_tutorial.html#пакет-tarchetypes-13",
    "href": "targets_tutorial.html#пакет-tarchetypes-13",
    "title": "Пакет targets",
    "section": "Пакет tarchetypes [1/3]",
    "text": "Пакет tarchetypes [1/3]\n\nСсылка на пакет\nПозволяет создавать таргеты сложной структуры и с особой функциональностью:\n\nDynamic branching:\n\nover subsets of data frames: tar_group_by(), tar_group_select(), etc…\nover files: tar_files()\ndynamic batched replication: tar_rep()\ndynamic batched replication within static branches for data frames: tar_map_rep()"
  },
  {
    "objectID": "targets_tutorial.html#пакет-tarchetypes-23",
    "href": "targets_tutorial.html#пакет-tarchetypes-23",
    "title": "Пакет targets",
    "section": "Пакет tarchetypes [2/3]",
    "text": "Пакет tarchetypes [2/3]\n\n\nStatic branching:\n\ntar_combine()\ntar_map()\n\nПозволяет создавать таргеты сложной структуры и с особой функциональностью:\n\nсоздание rmd/quatro-отчетов: tar_render(report, \"report.Rmd\")\nAmazon Web Services (AWS):\n\ntar_aws_file(), tar_aws_parquet(), etc…"
  },
  {
    "objectID": "targets_tutorial.html#пакет-tarchetypes-33",
    "href": "targets_tutorial.html#пакет-tarchetypes-33",
    "title": "Пакет targets",
    "section": "Пакет tarchetypes [3/3]",
    "text": "Пакет tarchetypes [3/3]\n\n\ntar_url(), tar_file(), tar_file_fast()\nОсобые модели и форматы: tar_keras(), tar_torch(), tar_format_feather()\nСохранение в объектные файлы напрямую: tar_parquet(), tar_fst(), tar_fst_dt(), tar_fst_tbl(), tar_rds(), tar_qs()"
  },
  {
    "objectID": "targets_tutorial.html#очистка-локального-хранилища-вычисленных-таргетов",
    "href": "targets_tutorial.html#очистка-локального-хранилища-вычисленных-таргетов",
    "title": "Пакет targets",
    "section": "Очистка локального хранилища вычисленных таргетов",
    "text": "Очистка локального хранилища вычисленных таргетов\n\ntar_destroy() удаляет _targets/\ntar_prune() удаляет данные и метадату, не относящуюся к текущему пайплайну в _targets.R\ntar_delete() удаляет конкретный файл из _targets/objects/ без изменения метадаты\ntar_invalidate() удаляет метадату из таргетса, но оставляет связанные с таргетом данные в _targets/objects/\ntar_meta_delete() удаляет _targets/meta/"
  },
  {
    "objectID": "targets_tutorial.html#некоторые-заметки",
    "href": "targets_tutorial.html#некоторые-заметки",
    "title": "Пакет targets",
    "section": "Некоторые заметки",
    "text": "Некоторые заметки\n\nОдин targets может быть использован некоторыми проектами (как targets по городам)\nДля повторяемости исследования при наличии случайности следует фиксировать seed: tar_option_set(seed = 42)\nЕсть возможность писать список tar_target() как ячейки в rmd 😱 -&gt; Literate programming\nTargets можно вычислять распределенно на нескольких вычислителях -&gt; Distributed computing"
  },
  {
    "objectID": "targets_tutorial.html#ускорение-работы-targets",
    "href": "targets_tutorial.html#ускорение-работы-targets",
    "title": "Пакет targets",
    "section": "Ускорение работы targets",
    "text": "Ускорение работы targets\n\nДля ускорения работы:\n\ntar_option_set(format = \"qs\")\ntar_option_set(memory = \"transient\", garbage_collection = TRUE)"
  },
  {
    "objectID": "targets_tutorial.html#предостережение",
    "href": "targets_tutorial.html#предостережение",
    "title": "Пакет targets",
    "section": "Предостережение",
    "text": "Предостережение\nНе стоит запускать tar_make() в крупных проектах (например, проекты 123, 207, 211), где уже записан targets. Это может стоить очень долго и дорого"
  },
  {
    "objectID": "targets_tutorial.html#домашнее-задание",
    "href": "targets_tutorial.html#домашнее-задание",
    "title": "Пакет targets",
    "section": "Домашнее задание",
    "text": "Домашнее задание\n\nСделать targets из задания про kmeans. Минимум четыре осмысленных таргета\nРезультат:\n\nоформленный код с targets\nсохраненный граф всех узлов (html)\nуказание (можно комментарием в коде), где лежит результат применения модели и как эти данные можно прочитать"
  }
]